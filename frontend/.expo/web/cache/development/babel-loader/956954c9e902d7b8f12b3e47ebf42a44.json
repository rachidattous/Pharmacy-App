{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState, useEffect } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport Medicament from \"./Medicament\";\nimport axios from 'axios';\nimport Header from \"./Header\";\nimport Panier from \"./Panier\";\nimport SerchMedicament from \"./SerchMedicament\";\nimport { connect } from 'react-redux';\n\nvar Medicaments = function (_React$Component) {\n  _inherits(Medicaments, _React$Component);\n\n  var _super = _createSuper(Medicaments);\n\n  function Medicaments() {\n    _classCallCheck(this, Medicaments);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Medicaments, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(View, {\n        style: styles.container\n      }, React.createElement(Header, {\n        title: 'Medicaments',\n        onPress1: function onPress1() {\n          return _this.props.navigation.openDrawer();\n        },\n        number: 0,\n        onPress2: function onPress2() {\n          return _this.props.navigation.navigate(\"Panier\");\n        }\n      }), React.createElement(ScrollView, null, React.createElement(View, {\n        style: styles.row\n      }, React.createElement(SerchMedicament, {\n        onPress: this.props.addItemToCart\n      }), React.createElement(SerchMedicament, {\n        onPress: this.props.addItemToCart\n      })), React.createElement(View, {\n        style: styles.row\n      }, React.createElement(SerchMedicament, {\n        onPress: this.props.addItemToCart\n      }), React.createElement(SerchMedicament, {\n        onPress: this.props.addItemToCart\n      }))), React.createElement(StatusBar, {\n        style: \"auto\"\n      }));\n    }\n  }]);\n\n  return Medicaments;\n}(React.Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    addItemToCart: function addItemToCart(product) {\n      return dispatch({\n        type: 'ADD_TO_CART',\n        payload: product\n      });\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Medicaments);\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#fff'\n  },\n  row: {\n    flexDirection: 'row'\n  }\n});","map":{"version":3,"sources":["/Users/viet/pharma/src/Screens/Medicaments.js"],"names":["StatusBar","React","useState","useEffect","TouchableOpacity","Medicament","axios","Header","Panier","SerchMedicament","connect","Medicaments","styles","container","props","navigation","openDrawer","navigate","row","addItemToCart","Component","mapDispatchToProps","dispatch","product","type","payload","StyleSheet","create","backgroundColor","flexDirection"],"mappings":";;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAeC,QAAf,EAAwBC,SAAxB,QAAuC,OAAvC;;;;;AAEA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,OAAOC,UAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP;AACA,OAAOC,MAAP;AACA,OAAOC,eAAP;AACA,SAAQC,OAAR,QAAsB,aAAtB;;IAEMC,W;;;;;;;;;;;;;WAiCN,kBAAQ;AAAA;;AACN,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC;AAApB,SACE,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAE,aAAf;AAA8B,QAAA,QAAQ,EAAE;AAAA,iBAAM,KAAI,CAACC,KAAL,CAAWC,UAAX,CAAsBC,UAAtB,EAAN;AAAA,SAAxC;AAAkF,QAAA,MAAM,EAAE,CAA1F;AAA6F,QAAA,QAAQ,EAAE;AAAA,iBAAM,KAAI,CAACF,KAAL,CAAWC,UAAX,CAAsBE,QAAtB,CAA+B,QAA/B,CAAN;AAAA;AAAvG,QADF,EAEE,oBAAC,UAAD,QACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEL,MAAM,CAACM;AAApB,SACE,oBAAC,eAAD;AAAiB,QAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWK;AAArC,QADF,EAEE,oBAAC,eAAD;AAAiB,QAAA,OAAO,EAAE,KAAKL,KAAL,CAAWK;AAArC,QAFF,CADF,EAKE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEP,MAAM,CAACM;AAApB,SACE,oBAAC,eAAD;AAAiB,QAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWK;AAArC,QADF,EAEE,oBAAC,eAAD;AAAiB,QAAA,OAAO,EAAE,KAAKL,KAAL,CAAWK;AAArC,QAFF,CALF,CAFF,EAYE,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAC;AAAjB,QAZF,CADF;AAgBD;;;;EAlDyBlB,KAAK,CAACmB,S;;AAqDhC,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACvC,SAAO;AACLH,IAAAA,aAAa,EAAE,uBAACI,OAAD;AAAA,aAAaD,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAC,aAAN;AAAqBC,QAAAA,OAAO,EAAEF;AAA9B,OAAD,CAArB;AAAA;AADV,GAAP;AAGD,CAJD;;AAMA,eAAeb,OAAO,CAAC,IAAD,EAAMW,kBAAN,CAAP,CAAiCV,WAAjC,CAAf;AAEA,IAAMC,MAAM,GAAGc,UAAU,CAACC,MAAX,CAAkB;AAC/Bd,EAAAA,SAAS,EAAE;AACTe,IAAAA,eAAe,EAAE;AADR,GADoB;AAK/BV,EAAAA,GAAG,EAAC;AACFW,IAAAA,aAAa,EAAE;AADb;AAL2B,CAAlB,CAAf","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, {useState,useEffect}from 'react';\nimport { ScrollView, StyleSheet, Text, View } from 'react-native';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport Medicament from './Medicament';\nimport axios from 'axios';\nimport Header from './Header';\nimport Panier from './Panier';\nimport SerchMedicament from './SerchMedicament';\nimport {connect} from 'react-redux'\n\nclass Medicaments extends React.Component {\n\n\n//   const api = async() => {\n//   try{\n//     const axios = require('axios');\n//     const url='http://localhost:3000/pharmacies'\n//     const reponse = await  axios.get(url,\n//         {\n//             headers: {\n//                 'Accept': '*',\n//                 'Content-Type':'multipart/form-data; boundary=----WebKitFormBoundaryyEmKNDsBKjB7QEqu'      \n//             },\n//         }\n//     )\n//     alert(\"reponse\");\n//   } catch {\n\n//   }\n// }\n\n\n// const [isLoading, setLoading] = useState(true);\n// const [data, setData] = useState([]);\n\n// const api = () => {\n//   fetch('https://raw.githubusercontent.com/adhithiravi/React-Hooks-Examples/master/testAPI.json')\n//       .then((response) => response.json())\n//       .then((json) => console.log(json.data))\n//       .catch((error) => console.error(error))\n//       .finally(() => setLoading(false));\n// }\n\nrender(){\n  return (\n    <View style={styles.container}>\n      <Header title={'Medicaments'} onPress1={() => this.props.navigation.openDrawer()} number={0} onPress2={() => this.props.navigation.navigate(\"Panier\")}/>\n      <ScrollView>\n        <View style={styles.row}>\n          <SerchMedicament onPress={this.props.addItemToCart}/>\n          <SerchMedicament onPress={this.props.addItemToCart}/>\n        </View>\n        <View style={styles.row}>\n          <SerchMedicament onPress={this.props.addItemToCart}/>\n          <SerchMedicament onPress={this.props.addItemToCart}/>\n        </View>\n      </ScrollView>\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addItemToCart: (product) => dispatch({type:'ADD_TO_CART', payload: product})\n  }\n}\n\nexport default connect(null,mapDispatchToProps)(Medicaments);\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#fff',\n  },\n\n  row:{\n    flexDirection: 'row'\n  }\n});\n"]},"metadata":{},"sourceType":"module"}