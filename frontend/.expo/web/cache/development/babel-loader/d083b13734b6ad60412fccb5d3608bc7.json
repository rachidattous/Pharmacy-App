{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport PermissionsAndroid from \"react-native-web/dist/exports/PermissionsAndroid\";\nimport LocationError from \"./LocationError\";\nvar OS = Platform.OS;\nvar Version = parseInt(Platform.Version);\nvar ReactNativeGetLocation = NativeModules.ReactNativeGetLocation;\n\nfunction openUrlIfCan(url) {\n  return _regeneratorRuntime.async(function openUrlIfCan$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(Linking.canOpenURL(url));\n\n        case 2:\n          if (!_context.sent) {\n            _context.next = 6;\n            break;\n          }\n\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(Linking.openURL(url));\n\n        case 5:\n          return _context.abrupt(\"return\", true);\n\n        case 6:\n          return _context.abrupt(\"return\", false);\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction openIOSSettings(root) {\n  var path,\n      _args2 = arguments;\n  return _regeneratorRuntime.async(function openIOSSettings$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          path = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : '';\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(openUrlIfCan(\"App-Prefs:root=\" + root + (path ? \"&path=\" + path : '')));\n\n        case 3:\n          if (!_context2.sent) {\n            _context2.next = 5;\n            break;\n          }\n\n          return _context2.abrupt(\"return\", true);\n\n        case 5:\n          _context2.next = 7;\n          return _regeneratorRuntime.awrap(openUrlIfCan('App-Prefs:'));\n\n        case 7:\n          if (!_context2.sent) {\n            _context2.next = 9;\n            break;\n          }\n\n          return _context2.abrupt(\"return\", true);\n\n        case 9:\n          return _context2.abrupt(\"return\", false);\n\n        case 10:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\n;\n\nfunction requestAndroidPermission() {\n  var enableHighAccuracy,\n      PERMISSIONS,\n      RESULTS,\n      granted,\n      _args3 = arguments;\n  return _regeneratorRuntime.async(function requestAndroidPermission$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          enableHighAccuracy = _args3.length > 0 && _args3[0] !== undefined ? _args3[0] : false;\n          PERMISSIONS = PermissionsAndroid.PERMISSIONS, RESULTS = PermissionsAndroid.RESULTS;\n          _context3.next = 4;\n          return _regeneratorRuntime.awrap(PermissionsAndroid.request(enableHighAccuracy ? PERMISSIONS.ACCESS_FINE_LOCATION : PERMISSIONS.ACCESS_COARSE_LOCATION));\n\n        case 4:\n          granted = _context3.sent;\n\n          if (!(granted !== RESULTS.GRANTED)) {\n            _context3.next = 7;\n            break;\n          }\n\n          throw new LocationError('UNAUTHORIZED', 'Authorization denied');\n\n        case 7:\n          return _context3.abrupt(\"return\", true);\n\n        case 8:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nexport default {\n  getCurrentPosition: function getCurrentPosition() {\n    var _arguments = arguments;\n    return function _callee() {\n      var options, location, code, message, locationError;\n      return _regeneratorRuntime.async(function _callee$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              options = _arguments.length > 0 && _arguments[0] !== undefined ? _arguments[0] : {\n                enableHighAccuracy: false,\n                timeout: 0\n              };\n\n              if (!(OS === 'android')) {\n                _context4.next = 4;\n                break;\n              }\n\n              _context4.next = 4;\n              return _regeneratorRuntime.awrap(requestAndroidPermission(options.enableHighAccuracy));\n\n            case 4:\n              _context4.prev = 4;\n              _context4.next = 7;\n              return _regeneratorRuntime.awrap(ReactNativeGetLocation.getCurrentPosition(options));\n\n            case 7:\n              location = _context4.sent;\n              return _context4.abrupt(\"return\", location);\n\n            case 11:\n              _context4.prev = 11;\n              _context4.t0 = _context4[\"catch\"](4);\n              code = _context4.t0.code, message = _context4.t0.message;\n              locationError = new LocationError(code, message);\n              locationError.stack = _context4.t0.stack;\n              throw locationError;\n\n            case 17:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, [[4, 11]], Promise);\n    }();\n  },\n  openAppSettings: function openAppSettings() {\n    return ReactNativeGetLocation.openAppSettings();\n  },\n  openWifiSettings: function openWifiSettings() {\n    return function _callee2() {\n      return _regeneratorRuntime.async(function _callee2$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              if (!(OS === 'android')) {\n                _context5.next = 2;\n                break;\n              }\n\n              return _context5.abrupt(\"return\", ReactNativeGetLocation.openWifiSettings());\n\n            case 2:\n              _context5.next = 4;\n              return _regeneratorRuntime.awrap(openIOSSettings('WIFI'));\n\n            case 4:\n              if (!_context5.sent) {\n                _context5.next = 6;\n                break;\n              }\n\n              return _context5.abrupt(\"return\", true);\n\n            case 6:\n              return _context5.abrupt(\"return\", ReactNativeGetLocation.openAppSettings());\n\n            case 7:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }();\n  },\n  openCelularSettings: function openCelularSettings() {\n    return function _callee3() {\n      return _regeneratorRuntime.async(function _callee3$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              if (!(OS === 'android')) {\n                _context6.next = 2;\n                break;\n              }\n\n              return _context6.abrupt(\"return\", ReactNativeGetLocation.openCelularSettings());\n\n            case 2:\n              _context6.next = 4;\n              return _regeneratorRuntime.awrap(openIOSSettings('MOBILE_DATA_SETTINGS_ID'));\n\n            case 4:\n              if (!_context6.sent) {\n                _context6.next = 6;\n                break;\n              }\n\n              return _context6.abrupt(\"return\", true);\n\n            case 6:\n              return _context6.abrupt(\"return\", ReactNativeGetLocation.openAppSettings());\n\n            case 7:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }();\n  },\n  openGpsSettings: function openGpsSettings() {\n    return function _callee4() {\n      return _regeneratorRuntime.async(function _callee4$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              if (!(OS === 'android')) {\n                _context7.next = 2;\n                break;\n              }\n\n              return _context7.abrupt(\"return\", ReactNativeGetLocation.openGpsSettings());\n\n            case 2:\n              if (!(Version >= 10)) {\n                _context7.next = 9;\n                break;\n              }\n\n              _context7.next = 5;\n              return _regeneratorRuntime.awrap(openIOSSettings('Privacy', 'LOCATION'));\n\n            case 5:\n              if (!_context7.sent) {\n                _context7.next = 7;\n                break;\n              }\n\n              return _context7.abrupt(\"return\", true);\n\n            case 7:\n              _context7.next = 13;\n              break;\n\n            case 9:\n              _context7.next = 11;\n              return _regeneratorRuntime.awrap(openIOSSettings('LOCATION_SERVICES'));\n\n            case 11:\n              if (!_context7.sent) {\n                _context7.next = 13;\n                break;\n              }\n\n              return _context7.abrupt(\"return\", true);\n\n            case 13:\n              return _context7.abrupt(\"return\", ReactNativeGetLocation.openAppSettings());\n\n            case 14:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }();\n  }\n};","map":{"version":3,"sources":["/Users/viet/pharma/node_modules/react-native-get-location/index.js"],"names":["LocationError","OS","Platform","Version","parseInt","ReactNativeGetLocation","NativeModules","openUrlIfCan","url","Linking","canOpenURL","openURL","openIOSSettings","root","path","requestAndroidPermission","enableHighAccuracy","PERMISSIONS","PermissionsAndroid","RESULTS","request","ACCESS_FINE_LOCATION","ACCESS_COARSE_LOCATION","granted","GRANTED","getCurrentPosition","options","timeout","location","code","message","locationError","stack","openAppSettings","openWifiSettings","openCelularSettings","openGpsSettings"],"mappings":"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","sourcesContent":["/**\n* MIT License\n* \n* Copyright (c) 2019 Douglas Nassif Roma Junior\n* \n* Permission is hereby granted, free of charge, to any person obtaining a copy\n* of this software and associated documentation files (the \"Software\"), to deal\n* in the Software without restriction, including without limitation the rights\n* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the Software is\n* furnished to do so, subject to the following conditions:\n* \n* The above copyright notice and this permission notice shall be included in all\n* copies or substantial portions of the Software.\n* \n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n* SOFTWARE. \n*/\n\nimport {\n    NativeModules, Platform, Linking,\n    PermissionsAndroid,\n} from 'react-native';\n\nimport LocationError from './LocationError';\n\nconst { OS } = Platform;\nconst Version = parseInt(Platform.Version);\nconst { ReactNativeGetLocation } = NativeModules;\n\nasync function openUrlIfCan(url) {\n    if (await Linking.canOpenURL(url)) {\n        await Linking.openURL(url);\n        return true;\n    }\n    return false;\n}\n\nasync function openIOSSettings(root, path = '') {\n    if (await openUrlIfCan(`App-Prefs:root=${root}${path ? `&path=${path}` : ''}`)) {\n        return true;\n    }\n    if (await openUrlIfCan('App-Prefs:')) {\n        return true;\n    }\n    return false;\n};\n\nasync function requestAndroidPermission(enableHighAccuracy = false) {\n    const { PERMISSIONS, RESULTS } = PermissionsAndroid;\n    const granted = await PermissionsAndroid.request(enableHighAccuracy\n        ? PERMISSIONS.ACCESS_FINE_LOCATION\n        : PERMISSIONS.ACCESS_COARSE_LOCATION);\n    if (granted !== RESULTS.GRANTED) {\n        throw new LocationError('UNAUTHORIZED', 'Authorization denied');\n    }\n    return true;\n}\n\nexport default {\n    async getCurrentPosition(options = {\n        enableHighAccuracy: false,\n        timeout: 0,\n    }) {\n        if (OS === 'android') {\n            await requestAndroidPermission(options.enableHighAccuracy);\n        }\n        try {\n            const location = await ReactNativeGetLocation.getCurrentPosition(options);\n            return location;\n        } catch (error) {\n            const { code, message } = error;\n            const locationError = new LocationError(code, message);\n            locationError.stack = error.stack;\n            throw locationError;\n        }\n    },\n\n    // Extra functions\n\n    openAppSettings() {\n        return ReactNativeGetLocation.openAppSettings();\n    },\n\n    /**\n     * Only for Android\n     */\n    async openWifiSettings() {\n        if (OS === 'android') {\n            return ReactNativeGetLocation.openWifiSettings();\n        }\n\n        if (await openIOSSettings('WIFI')) {\n            return true;\n        }\n\n        return ReactNativeGetLocation.openAppSettings();\n    },\n\n    /**\n     * Only for Android\n     */\n    async openCelularSettings() {\n        if (OS === 'android') {\n            return ReactNativeGetLocation.openCelularSettings();\n        }\n\n        if (await openIOSSettings('MOBILE_DATA_SETTINGS_ID')) {\n            return true;\n        }\n\n        return ReactNativeGetLocation.openAppSettings();\n    },\n\n    /**\n     * Only for Android\n     */\n    async openGpsSettings() {\n        if (OS === 'android') {\n            return ReactNativeGetLocation.openGpsSettings();\n        }\n\n        if (Version >= 10) {\n            if (await openIOSSettings('Privacy', 'LOCATION')) {\n                return true;\n            }\n        } else {\n            if (await openIOSSettings('LOCATION_SERVICES')) {\n                return true;\n            }\n        }\n\n        return ReactNativeGetLocation.openAppSettings();\n    },\n};\n"]},"metadata":{},"sourceType":"module"}