{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Dots from \"./dots\";\n\nvar _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar ViewSlider = function (_React$Component) {\n  _inherits(ViewSlider, _React$Component);\n\n  var _super = _createSuper(ViewSlider);\n\n  function ViewSlider() {\n    var _this;\n\n    _classCallCheck(this, ViewSlider);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      activeDot: 1,\n      autoSlide: false,\n      intervalId: null\n    };\n\n    _this.startAutoSlide = function () {\n      var interval = _this.props.slideInterval;\n\n      if (interval < 1000) {\n        console.warn('slideInterval time must be at least 1000 milisecond.');\n      } else {\n        var count = _this.props.slideCount;\n        var step = 1;\n        var intervalId = setInterval(function () {\n          _this.scroll.scrollTo({\n            x: width * step\n          });\n\n          _this.setState({\n            activeDot: step + 1\n          });\n\n          if (count == step + 1) {\n            step = 0;\n          } else {\n            step++;\n          }\n        }, interval);\n\n        _this.setState({\n          intervalId: intervalId\n        });\n      }\n    };\n\n    _this.onScroll = function (event) {\n      var scrollPositionX = event.nativeEvent.contentOffset.x;\n      var offset = 100;\n\n      if (scrollPositionX >= 0 && scrollPositionX <= parseInt(width - offset)) {\n        _this.setState({\n          activeDot: 1\n        });\n      } else if (scrollPositionX >= width - offset && scrollPositionX <= width * 2 - offset) {\n        _this.setState({\n          activeDot: 2\n        });\n      } else if (scrollPositionX >= width * 2 - offset && scrollPositionX <= width * 3 - offset) {\n        _this.setState({\n          activeDot: 3\n        });\n      } else if (scrollPositionX >= width * 3 - offset && scrollPositionX <= width * 4 - offset) {\n        _this.setState({\n          activeDot: 4\n        });\n      } else if (scrollPositionX >= width * 4 - offset && scrollPositionX <= width * 5 - offset) {\n        _this.setState({\n          activeDot: 5\n        });\n      } else if (scrollPositionX >= width * 5 - offset && scrollPositionX <= width * 6 - offset) {\n        _this.setState({\n          activeDot: 6\n        });\n      } else if (scrollPositionX >= width * 6 - offset && scrollPositionX <= width * 7 - offset) {\n        _this.setState({\n          activeDot: 7\n        });\n      } else if (scrollPositionX >= width * 7 - offset && scrollPositionX <= width * 8 - offset) {\n        _this.setState({\n          activeDot: 8\n        });\n      } else if (scrollPositionX >= width * 8 - offset && scrollPositionX <= width * 9 - offset) {\n        _this.setState({\n          activeDot: 9\n        });\n      } else if (scrollPositionX >= width * 9 - offset && scrollPositionX <= width * 10 - offset) {\n        _this.setState({\n          activeDot: 10\n        });\n      } else if (scrollPositionX >= width * 10 - offset && scrollPositionX <= width * 11 - offset) {\n        _this.setState({\n          activeDot: 11\n        });\n      } else if (scrollPositionX >= width * 11 - offset && scrollPositionX <= width * 12 - offset) {\n        _this.setState({\n          activeDot: 12\n        });\n      } else if (scrollPositionX >= width * 12 - offset && scrollPositionX <= width * 13 - offset) {\n        _this.setState({\n          activeDot: 13\n        });\n      } else if (scrollPositionX >= width * 13 - offset && scrollPositionX <= width * 14 - offset) {\n        _this.setState({\n          activeDot: 14\n        });\n      } else if (scrollPositionX >= width * 14 - offset && scrollPositionX <= width * 15 - offset) {\n        _this.setState({\n          activeDot: 15\n        });\n      } else if (scrollPositionX >= width * 15 - offset && scrollPositionX <= width * 16 - offset) {\n        _this.setState({\n          activeDot: 16\n        });\n      } else if (scrollPositionX >= width * 16 - offset && scrollPositionX <= width * 17 - offset) {\n        _this.setState({\n          activeDot: 17\n        });\n      } else if (scrollPositionX >= width * 17 - offset && scrollPositionX <= width * 18 - offset) {\n        _this.setState({\n          activeDot: 18\n        });\n      } else if (scrollPositionX >= width * 18 - offset && scrollPositionX <= width * 19 - offset) {\n        _this.setState({\n          activeDot: 19\n        });\n      } else if (scrollPositionX >= width * 19 - offset && scrollPositionX <= width * 20 - offset) {\n        _this.setState({\n          activeDot: 20\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(ViewSlider, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.autoSlide == true && this.scroll.scrollTo) {\n        this.startAutoSlide();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.state.intervalId);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          dots = _this$props.dots,\n          dotActiveColor = _this$props.dotActiveColor,\n          dotInactiveColor = _this$props.dotInactiveColor,\n          slideCount = _this$props.slideCount,\n          dotsContainerStyle = _this$props.dotsContainerStyle;\n      var activeDot = this.state.activeDot;\n      return React.createElement(View, {\n        style: [{\n          width: width,\n          height: this.props.height\n        }, this.props.style]\n      }, React.createElement(ScrollView, {\n        contentContainerStyle: {},\n        horizontal: true,\n        pagingEnabled: true,\n        ref: function ref(node) {\n          return _this2.scroll = node;\n        },\n        scrollEventThrottle: 70,\n        onScroll: function onScroll(s) {\n          return _this2.onScroll(s);\n        },\n        showsHorizontalScrollIndicator: false\n      }, this.props.renderSlides), dots && React.createElement(Dots, {\n        activeColor: dotActiveColor,\n        inactiveColor: dotInactiveColor,\n        count: slideCount,\n        activeDot: activeDot,\n        containerStyle: dotsContainerStyle\n      }));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(prevState, nextProp) {\n      return autoSlide = nextProp.autoSlide;\n    }\n  }]);\n\n  return ViewSlider;\n}(React.Component);\n\nexport { ViewSlider as default };","map":{"version":3,"sources":["/Users/viet/pharma/src/Screens/ViewSlider.js"],"names":["React","Dots","Dimensions","get","width","height","ViewSlider","state","activeDot","autoSlide","intervalId","startAutoSlide","interval","props","slideInterval","console","warn","count","slideCount","step","setInterval","scroll","scrollTo","x","setState","onScroll","event","scrollPositionX","nativeEvent","contentOffset","offset","parseInt","clearInterval","dots","dotActiveColor","dotInactiveColor","dotsContainerStyle","style","node","s","renderSlides","prevState","nextProp","Component"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAEA,OAAOC,IAAP;;AAEA,sBAAwBC,UAAU,CAACC,GAAX,CAAe,QAAf,CAAxB;AAAA,IAAOC,KAAP,mBAAOA,KAAP;AAAA,IAAcC,MAAd,mBAAcA,MAAd;;IAEqBC,U;;;;;;;;;;;;;;;UACnBC,K,GAAQ;AACNC,MAAAA,SAAS,EAAE,CADL;AAENC,MAAAA,SAAS,EAAE,KAFL;AAGNC,MAAAA,UAAU,EAAE;AAHN,K;;UAgBRC,c,GAAiB,YAAM;AACrB,UAAMC,QAAQ,GAAG,MAAKC,KAAL,CAAWC,aAA5B;;AACA,UAAIF,QAAQ,GAAG,IAAf,EAAqB;AACnBG,QAAAA,OAAO,CAACC,IAAR,CAAa,sDAAb;AACD,OAFD,MAEO;AACL,YAAMC,KAAK,GAAG,MAAKJ,KAAL,CAAWK,UAAzB;AACA,YAAIC,IAAI,GAAG,CAAX;AACA,YAAIT,UAAU,GAAGU,WAAW,CAAC,YAAM;AACjC,gBAAKC,MAAL,CAAYC,QAAZ,CAAqB;AAACC,YAAAA,CAAC,EAAEnB,KAAK,GAAGe;AAAZ,WAArB;;AACA,gBAAKK,QAAL,CAAc;AAAChB,YAAAA,SAAS,EAAEW,IAAI,GAAG;AAAnB,WAAd;;AACA,cAAIF,KAAK,IAAIE,IAAI,GAAG,CAApB,EAAuB;AACrBA,YAAAA,IAAI,GAAG,CAAP;AACD,WAFD,MAEO;AACLA,YAAAA,IAAI;AACL;AACF,SAR2B,EAQzBP,QARyB,CAA5B;;AASA,cAAKY,QAAL,CAAc;AAACd,UAAAA,UAAU,EAAEA;AAAb,SAAd;AACD;AACF,K;;UAMDe,Q,GAAW,UAAAC,KAAK,EAAI;AAClB,UAAMC,eAAe,GAAGD,KAAK,CAACE,WAAN,CAAkBC,aAAlB,CAAgCN,CAAxD;AACA,UAAMO,MAAM,GAAG,GAAf;;AAEA,UAAIH,eAAe,IAAI,CAAnB,IAAwBA,eAAe,IAAII,QAAQ,CAAC3B,KAAK,GAAG0B,MAAT,CAAvD,EAAyE;AACvE,cAAKN,QAAL,CAAc;AAAChB,UAAAA,SAAS,EAAE;AAAZ,SAAd;AACD,OAFD,MAEO,IACLmB,eAAe,IAAIvB,KAAK,GAAG0B,MAA3B,IACAH,eAAe,IAAIvB,KAAK,GAAG,CAAR,GAAY0B,MAF1B,EAGL;AACA,cAAKN,QAAL,CAAc;AAAChB,UAAAA,SAAS,EAAE;AAAZ,SAAd;AACD,OALM,MAKA,IACLmB,eAAe,IAAIvB,KAAK,GAAG,CAAR,GAAY0B,MAA/B,IACAH,eAAe,IAAIvB,KAAK,GAAG,CAAR,GAAY0B,MAF1B,EAGL;AACA,cAAKN,QAAL,CAAc;AAAChB,UAAAA,SAAS,EAAE;AAAZ,SAAd;AACD,OALM,MAKA,IACLmB,eAAe,IAAIvB,KAAK,GAAG,CAAR,GAAY0B,MAA/B,IACAH,eAAe,IAAIvB,KAAK,GAAG,CAAR,GAAY0B,MAF1B,EAGL;AACA,cAAKN,QAAL,CAAc;AAAChB,UAAAA,SAAS,EAAE;AAAZ,SAAd;AACD,OALM,MAKA,IACLmB,eAAe,IAAIvB,KAAK,GAAG,CAAR,GAAY0B,MAA/B,IACAH,eAAe,IAAIvB,KAAK,GAAG,CAAR,GAAY0B,MAF1B,EAGL;AACA,cAAKN,QAAL,CAAc;AAAChB,UAAAA,SAAS,EAAE;AAAZ,SAAd;AACD,OALM,MAKA,IACLmB,eAAe,IAAIvB,KAAK,GAAG,CAAR,GAAY0B,MAA/B,IACAH,eAAe,IAAIvB,KAAK,GAAG,CAAR,GAAY0B,MAF1B,EAGL;AACA,cAAKN,QAAL,CAAc;AAAChB,UAAAA,SAAS,EAAE;AAAZ,SAAd;AACD,OALM,MAKA,IACLmB,eAAe,IAAIvB,KAAK,GAAG,CAAR,GAAY0B,MAA/B,IACAH,eAAe,IAAIvB,KAAK,GAAG,CAAR,GAAY0B,MAF1B,EAGL;AACA,cAAKN,QAAL,CAAc;AAAChB,UAAAA,SAAS,EAAE;AAAZ,SAAd;AACD,OALM,MAKA,IACLmB,eAAe,IAAIvB,KAAK,GAAG,CAAR,GAAY0B,MAA/B,IACAH,eAAe,IAAIvB,KAAK,GAAG,CAAR,GAAY0B,MAF1B,EAGL;AACA,cAAKN,QAAL,CAAc;AAAChB,UAAAA,SAAS,EAAE;AAAZ,SAAd;AACD,OALM,MAKA,IACLmB,eAAe,IAAIvB,KAAK,GAAG,CAAR,GAAY0B,MAA/B,IACAH,eAAe,IAAIvB,KAAK,GAAG,CAAR,GAAY0B,MAF1B,EAGL;AACA,cAAKN,QAAL,CAAc;AAAChB,UAAAA,SAAS,EAAE;AAAZ,SAAd;AACD,OALM,MAKA,IACLmB,eAAe,IAAIvB,KAAK,GAAG,CAAR,GAAY0B,MAA/B,IACAH,eAAe,IAAIvB,KAAK,GAAG,EAAR,GAAa0B,MAF3B,EAGL;AACA,cAAKN,QAAL,CAAc;AAAChB,UAAAA,SAAS,EAAE;AAAZ,SAAd;AACD,OALM,MAKA,IACLmB,eAAe,IAAIvB,KAAK,GAAG,EAAR,GAAa0B,MAAhC,IACAH,eAAe,IAAIvB,KAAK,GAAG,EAAR,GAAa0B,MAF3B,EAGL;AACA,cAAKN,QAAL,CAAc;AAAChB,UAAAA,SAAS,EAAE;AAAZ,SAAd;AACD,OALM,MAKA,IACLmB,eAAe,IAAIvB,KAAK,GAAG,EAAR,GAAa0B,MAAhC,IACAH,eAAe,IAAIvB,KAAK,GAAG,EAAR,GAAa0B,MAF3B,EAGL;AACA,cAAKN,QAAL,CAAc;AAAChB,UAAAA,SAAS,EAAE;AAAZ,SAAd;AACD,OALM,MAKA,IACLmB,eAAe,IAAIvB,KAAK,GAAG,EAAR,GAAa0B,MAAhC,IACAH,eAAe,IAAIvB,KAAK,GAAG,EAAR,GAAa0B,MAF3B,EAGL;AACA,cAAKN,QAAL,CAAc;AAAChB,UAAAA,SAAS,EAAE;AAAZ,SAAd;AACD,OALM,MAKA,IACLmB,eAAe,IAAIvB,KAAK,GAAG,EAAR,GAAa0B,MAAhC,IACAH,eAAe,IAAIvB,KAAK,GAAG,EAAR,GAAa0B,MAF3B,EAGL;AACA,cAAKN,QAAL,CAAc;AAAChB,UAAAA,SAAS,EAAE;AAAZ,SAAd;AACD,OALM,MAKA,IACLmB,eAAe,IAAIvB,KAAK,GAAG,EAAR,GAAa0B,MAAhC,IACAH,eAAe,IAAIvB,KAAK,GAAG,EAAR,GAAa0B,MAF3B,EAGL;AACA,cAAKN,QAAL,CAAc;AAAChB,UAAAA,SAAS,EAAE;AAAZ,SAAd;AACD,OALM,MAKA,IACLmB,eAAe,IAAIvB,KAAK,GAAG,EAAR,GAAa0B,MAAhC,IACAH,eAAe,IAAIvB,KAAK,GAAG,EAAR,GAAa0B,MAF3B,EAGL;AACA,cAAKN,QAAL,CAAc;AAAChB,UAAAA,SAAS,EAAE;AAAZ,SAAd;AACD,OALM,MAKA,IACLmB,eAAe,IAAIvB,KAAK,GAAG,EAAR,GAAa0B,MAAhC,IACAH,eAAe,IAAIvB,KAAK,GAAG,EAAR,GAAa0B,MAF3B,EAGL;AACA,cAAKN,QAAL,CAAc;AAAChB,UAAAA,SAAS,EAAE;AAAZ,SAAd;AACD,OALM,MAKA,IACLmB,eAAe,IAAIvB,KAAK,GAAG,EAAR,GAAa0B,MAAhC,IACAH,eAAe,IAAIvB,KAAK,GAAG,EAAR,GAAa0B,MAF3B,EAGL;AACA,cAAKN,QAAL,CAAc;AAAChB,UAAAA,SAAS,EAAE;AAAZ,SAAd;AACD,OALM,MAKA,IACLmB,eAAe,IAAIvB,KAAK,GAAG,EAAR,GAAa0B,MAAhC,IACAH,eAAe,IAAIvB,KAAK,GAAG,EAAR,GAAa0B,MAF3B,EAGL;AACA,cAAKN,QAAL,CAAc;AAAChB,UAAAA,SAAS,EAAE;AAAZ,SAAd;AACD,OALM,MAKA,IACLmB,eAAe,IAAIvB,KAAK,GAAG,EAAR,GAAa0B,MAAhC,IACAH,eAAe,IAAIvB,KAAK,GAAG,EAAR,GAAa0B,MAF3B,EAGL;AACA,cAAKN,QAAL,CAAc;AAAChB,UAAAA,SAAS,EAAE;AAAZ,SAAd;AACD;AACF,K;;;;;;;WApID,6BAAoB;AAClB,UAAI,KAAKK,KAAL,CAAWJ,SAAX,IAAwB,IAAxB,IAAgC,KAAKY,MAAL,CAAYC,QAAhD,EAA0D;AACxD,aAAKX,cAAL;AACD;AACF;;;WAsBD,gCAAuB;AACrBqB,MAAAA,aAAa,CAAC,KAAKzB,KAAL,CAAWG,UAAZ,CAAb;AACD;;;WA0GD,kBAAS;AAAA;;AACP,wBAMI,KAAKG,KANT;AAAA,UACEoB,IADF,eACEA,IADF;AAAA,UAEEC,cAFF,eAEEA,cAFF;AAAA,UAGEC,gBAHF,eAGEA,gBAHF;AAAA,UAIEjB,UAJF,eAIEA,UAJF;AAAA,UAKEkB,kBALF,eAKEA,kBALF;AAOA,UAAO5B,SAAP,GAAoB,KAAKD,KAAzB,CAAOC,SAAP;AACA,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAAC;AAACJ,UAAAA,KAAK,EAALA,KAAD;AAAQC,UAAAA,MAAM,EAAE,KAAKQ,KAAL,CAAWR;AAA3B,SAAD,EAAqC,KAAKQ,KAAL,CAAWwB,KAAhD;AAAb,SACE,oBAAC,UAAD;AACE,QAAA,qBAAqB,EAAE,EADzB;AAEE,QAAA,UAAU,EAAE,IAFd;AAGE,QAAA,aAAa,EAAE,IAHjB;AAIE,QAAA,GAAG,EAAE,aAAAC,IAAI;AAAA,iBAAK,MAAI,CAACjB,MAAL,GAAciB,IAAnB;AAAA,SAJX;AAKE,QAAA,mBAAmB,EAAE,EALvB;AAME,QAAA,QAAQ,EAAE,kBAAAC,CAAC;AAAA,iBAAI,MAAI,CAACd,QAAL,CAAcc,CAAd,CAAJ;AAAA,SANb;AAOE,QAAA,8BAA8B,EAAE;AAPlC,SAQG,KAAK1B,KAAL,CAAW2B,YARd,CADF,EAWGP,IAAI,IACH,oBAAC,IAAD;AACE,QAAA,WAAW,EAAEC,cADf;AAEE,QAAA,aAAa,EAAEC,gBAFjB;AAGE,QAAA,KAAK,EAAEjB,UAHT;AAIE,QAAA,SAAS,EAAEV,SAJb;AAKE,QAAA,cAAc,EAAE4B;AALlB,QAZJ,CADF;AAuBD;;;WA1KD,kCAAgCK,SAAhC,EAA2CC,QAA3C,EAAqD;AACnD,aAAQjC,SAAS,GAAGiC,QAAQ,CAACjC,SAA7B;AACD;;;;EATqCT,KAAK,CAAC2C,S;;SAAzBrC,U","sourcesContent":["import React from 'react';\nimport {View, Text, ScrollView, Dimensions} from 'react-native';\nimport Dots from './dots';\n\nconst {width, height} = Dimensions.get('window');\n\nexport default class ViewSlider extends React.Component {\n  state = {\n    activeDot: 1,\n    autoSlide: false,\n    intervalId: null,\n  };\n\n  static getDerivedStateFromProps(prevState, nextProp) {\n    return (autoSlide = nextProp.autoSlide);\n  }\n\n  componentDidMount() {\n    if (this.props.autoSlide == true && this.scroll.scrollTo) {\n      this.startAutoSlide();\n    }\n  }\n\n  startAutoSlide = () => {\n    const interval = this.props.slideInterval;\n    if (interval < 1000) {\n      console.warn('slideInterval time must be at least 1000 milisecond.');\n    } else {\n      const count = this.props.slideCount;\n      let step = 1;\n      let intervalId = setInterval(() => {\n        this.scroll.scrollTo({x: width * step});\n        this.setState({activeDot: step + 1});\n        if (count == step + 1) {\n          step = 0;\n        } else {\n          step++;\n        }\n      }, interval);\n      this.setState({intervalId: intervalId});\n    }\n  };\n\n  componentWillUnmount() {\n    clearInterval(this.state.intervalId);\n  }\n\n  onScroll = event => {\n    const scrollPositionX = event.nativeEvent.contentOffset.x;\n    const offset = 100;\n\n    if (scrollPositionX >= 0 && scrollPositionX <= parseInt(width - offset)) {\n      this.setState({activeDot: 1});\n    } else if (\n      scrollPositionX >= width - offset &&\n      scrollPositionX <= width * 2 - offset\n    ) {\n      this.setState({activeDot: 2});\n    } else if (\n      scrollPositionX >= width * 2 - offset &&\n      scrollPositionX <= width * 3 - offset\n    ) {\n      this.setState({activeDot: 3});\n    } else if (\n      scrollPositionX >= width * 3 - offset &&\n      scrollPositionX <= width * 4 - offset\n    ) {\n      this.setState({activeDot: 4});\n    } else if (\n      scrollPositionX >= width * 4 - offset &&\n      scrollPositionX <= width * 5 - offset\n    ) {\n      this.setState({activeDot: 5});\n    } else if (\n      scrollPositionX >= width * 5 - offset &&\n      scrollPositionX <= width * 6 - offset\n    ) {\n      this.setState({activeDot: 6});\n    } else if (\n      scrollPositionX >= width * 6 - offset &&\n      scrollPositionX <= width * 7 - offset\n    ) {\n      this.setState({activeDot: 7});\n    } else if (\n      scrollPositionX >= width * 7 - offset &&\n      scrollPositionX <= width * 8 - offset\n    ) {\n      this.setState({activeDot: 8});\n    } else if (\n      scrollPositionX >= width * 8 - offset &&\n      scrollPositionX <= width * 9 - offset\n    ) {\n      this.setState({activeDot: 9});\n    } else if (\n      scrollPositionX >= width * 9 - offset &&\n      scrollPositionX <= width * 10 - offset\n    ) {\n      this.setState({activeDot: 10});\n    } else if (\n      scrollPositionX >= width * 10 - offset &&\n      scrollPositionX <= width * 11 - offset\n    ) {\n      this.setState({activeDot: 11});\n    } else if (\n      scrollPositionX >= width * 11 - offset &&\n      scrollPositionX <= width * 12 - offset\n    ) {\n      this.setState({activeDot: 12});\n    } else if (\n      scrollPositionX >= width * 12 - offset &&\n      scrollPositionX <= width * 13 - offset\n    ) {\n      this.setState({activeDot: 13});\n    } else if (\n      scrollPositionX >= width * 13 - offset &&\n      scrollPositionX <= width * 14 - offset\n    ) {\n      this.setState({activeDot: 14});\n    } else if (\n      scrollPositionX >= width * 14 - offset &&\n      scrollPositionX <= width * 15 - offset\n    ) {\n      this.setState({activeDot: 15});\n    } else if (\n      scrollPositionX >= width * 15 - offset &&\n      scrollPositionX <= width * 16 - offset\n    ) {\n      this.setState({activeDot: 16});\n    } else if (\n      scrollPositionX >= width * 16 - offset &&\n      scrollPositionX <= width * 17 - offset\n    ) {\n      this.setState({activeDot: 17});\n    } else if (\n      scrollPositionX >= width * 17 - offset &&\n      scrollPositionX <= width * 18 - offset\n    ) {\n      this.setState({activeDot: 18});\n    } else if (\n      scrollPositionX >= width * 18 - offset &&\n      scrollPositionX <= width * 19 - offset\n    ) {\n      this.setState({activeDot: 19});\n    } else if (\n      scrollPositionX >= width * 19 - offset &&\n      scrollPositionX <= width * 20 - offset\n    ) {\n      this.setState({activeDot: 20});\n    }\n  };\n\n  render() {\n    const {\n      dots,\n      dotActiveColor,\n      dotInactiveColor,\n      slideCount,\n      dotsContainerStyle,\n    } = this.props;\n    const {activeDot} = this.state;\n    return (\n      <View style={[{width, height: this.props.height}, this.props.style]}>\n        <ScrollView\n          contentContainerStyle={{}}\n          horizontal={true}\n          pagingEnabled={true}\n          ref={node => (this.scroll = node)}\n          scrollEventThrottle={70}\n          onScroll={s => this.onScroll(s)}\n          showsHorizontalScrollIndicator={false}>\n          {this.props.renderSlides}\n        </ScrollView>\n        {dots && (\n          <Dots\n            activeColor={dotActiveColor}\n            inactiveColor={dotInactiveColor}\n            count={slideCount}\n            activeDot={activeDot}\n            containerStyle={dotsContainerStyle}\n          />\n        )}\n      </View>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}